'Test for matrix 2-matrix_divided'

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Positive Int values
>>> matrix_divided([[3, 3, 6], [12, 15, 18], [21, 33, 30]], 3)
[[1.0, 1.0, 2.0], [4.0, 5.0, 6.0], [7.0, 11.0, 10.0]]

# Positive Int with Remainder
>>> matrix_divided([[5, 8, 10], [2, 43, 29], [22, 31, 98]], 3)
[[1.7, 2.7, 3.3], [0.7, 14.3, 9.7], [7.3, 10.3, 32.7]]

# Negative Int
>>> matrix_divided([[5, 10, -15], [-5, 10, 20], [-20, 25, 30]], 5)
[[1.0, 2.0, -3.0], [-1.0, 2.0, 4.0], [-4.0, 5.0, 6.0]]

# Divide by Zero Test
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Matrix is a String
>>> matrix_divided("Matrix", 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Matrix is Divided by Str
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], "Burger")
Traceback (most recent call last):
...
TypeError: div must be a number